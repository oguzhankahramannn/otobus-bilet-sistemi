// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtobusBiletiApp;

#nullable disable

namespace OtobusBiletiApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250515125432_IlkKurulum")]
    partial class IlkKurulum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OtobusBiletiApp.Models.Admin", b =>
                {
                    b.Property<int>("p_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("p_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("p_id"));

                    b.Property<int>("Personp_id")
                        .HasColumnType("int");

                    b.HasKey("p_id");

                    b.HasIndex("Personp_id");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Bus", b =>
                {
                    b.Property<string>("b_plaka")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("b_plaka");

                    b.Property<int?>("company_id")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("model")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("model");

                    b.Property<int?>("seat_capacity")
                        .HasColumnType("int")
                        .HasColumnName("seat_capacity");

                    b.HasKey("b_plaka");

                    b.HasIndex("company_id");

                    b.ToTable("bus");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.BusCompany", b =>
                {
                    b.Property<int>("company_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("company_id"));

                    b.Property<string>("c_name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_name");

                    b.Property<string>("c_telno")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("c_telno");

                    b.HasKey("company_id");

                    b.ToTable("bus_company");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.BusFeature", b =>
                {
                    b.Property<string>("b_plaka")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("b_plaka");

                    b.Property<string>("feature_name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("feature_name");

                    b.HasKey("b_plaka", "feature_name");

                    b.ToTable("bus_feature");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.CompanyTel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("company_id")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("tel_no")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel_no");

                    b.HasKey("id");

                    b.HasIndex("company_id");

                    b.ToTable("company_tel");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.PaymentProcessing", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("payment_id"));

                    b.Property<string>("card_no")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("card_no");

                    b.Property<int?>("cvv_no")
                        .HasColumnType("int")
                        .HasColumnName("cvv_no");

                    b.Property<string>("status")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.HasKey("payment_id");

                    b.ToTable("payment_processing");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Person", b =>
                {
                    b.Property<int>("p_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("p_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("p_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("surname");

                    b.HasKey("p_id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Seat", b =>
                {
                    b.Property<int>("seat_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seat_no");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("seat_no"));

                    b.Property<int?>("PNR_NO")
                        .HasColumnType("int")
                        .HasColumnName("pnr_no");

                    b.Property<string>("b_plaka")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("b_plaka");

                    b.Property<bool?>("is_avalable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_available");

                    b.Property<int?>("p_id")
                        .HasColumnType("int")
                        .HasColumnName("p_id");

                    b.HasKey("seat_no");

                    b.HasIndex("PNR_NO");

                    b.HasIndex("b_plaka");

                    b.HasIndex("p_id");

                    b.ToTable("seat");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Ticket", b =>
                {
                    b.Property<int>("PNR_NO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pnr_no");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PNR_NO"));

                    b.Property<int?>("p_id")
                        .HasColumnType("int")
                        .HasColumnName("p_id");

                    b.Property<int?>("payment_id")
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    b.Property<int?>("trip_id")
                        .HasColumnType("int")
                        .HasColumnName("trip_id");

                    b.HasKey("PNR_NO");

                    b.HasIndex("p_id");

                    b.HasIndex("payment_id");

                    b.HasIndex("trip_id");

                    b.ToTable("ticket");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.TicketSeat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("PNR_NO")
                        .HasColumnType("int")
                        .HasColumnName("pnr_no");

                    b.Property<string>("b_plaka")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("b_plaka");

                    b.Property<int>("seat_no")
                        .HasColumnType("int")
                        .HasColumnName("seat_no");

                    b.HasKey("id");

                    b.HasIndex("PNR_NO");

                    b.HasIndex("b_plaka");

                    b.HasIndex("seat_no");

                    b.ToTable("ticket_seat");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Trip", b =>
                {
                    b.Property<int>("trip_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("trip_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("trip_id"));

                    b.Property<string>("b_plaka")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("b_plaka");

                    b.Property<string>("end_point")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("end_point");

                    b.Property<DateTime?>("end_time")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_time");

                    b.Property<int?>("p_id")
                        .HasColumnType("int")
                        .HasColumnName("p_id");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("price");

                    b.Property<DateTime?>("start_time")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_time");

                    b.Property<string>("startpoint")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("startpoint");

                    b.HasKey("trip_id");

                    b.HasIndex("b_plaka");

                    b.HasIndex("p_id");

                    b.ToTable("trip");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Admin", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("Personp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Bus", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.BusCompany", "BusCompany")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.Navigation("BusCompany");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.BusFeature", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("b_plaka")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.CompanyTel", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.BusCompany", "BusCompany")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusCompany");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Seat", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("PNR_NO");

                    b.HasOne("OtobusBiletiApp.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("b_plaka");

                    b.HasOne("OtobusBiletiApp.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("p_id");

                    b.Navigation("Bus");

                    b.Navigation("Person");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Ticket", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("p_id");

                    b.HasOne("OtobusBiletiApp.Models.PaymentProcessing", "PaymentProcessing")
                        .WithMany()
                        .HasForeignKey("payment_id");

                    b.HasOne("OtobusBiletiApp.Models.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("trip_id");

                    b.Navigation("PaymentProcessing");

                    b.Navigation("Person");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.TicketSeat", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("PNR_NO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtobusBiletiApp.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("b_plaka")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtobusBiletiApp.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("seat_no")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Seat");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("OtobusBiletiApp.Models.Trip", b =>
                {
                    b.HasOne("OtobusBiletiApp.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("b_plaka");

                    b.HasOne("OtobusBiletiApp.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("p_id");

                    b.Navigation("Bus");

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
